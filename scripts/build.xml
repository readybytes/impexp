<?xml version="1.0" ?>
<project name="Package Builder" basedir="." default="build" description="Phing build script for package.">

	<target name="config" description="Load configuration file">
		<property file="global.prop"  	override="false" />
		<property file="build.prop"  	override="false" />
	</target>

	<target name="get_svn_lastrevision" depends="config">
		<svnlastrevision workingcopy="${dir.root}" propertyname="svn.lastrevision" />
	</target>

	<target name="build" description="build installable package only" depends="config,get_svn_lastrevision">

		<delete dir="${dir.packages}" includeemptydirs="true" />
		<delete dir="${dir.tmp}" includeemptydirs="true" />

		<mkdir dir="${dir.packages}" />
		<mkdir dir="${dir.tmp}" />

		<phingcall target="export_from_wc" />		
		<phing phingfile="${project.shortform.small}.xml" inheritAll="true" target="build" />

		<zip destfile="${dir.packages}/${project.shortform}-${file.version}.${svn.lastrevision}.zip" 
			basedir="${dir.tmp}" />
	</target>


	<!-- Global Target -->
	<target name="export_from_wc" description="Export files from a local working copy" depends="config">
		<copy todir="${dir.tmp}">
			<fileset dir="${dir.src}">
				<include name="**" />
			</fileset>
		</copy>
		
		<!-- Apply the version change to all files. -->
		<reflexive>
			<fileset dir="${dir.tmp}">
			     <include name="**/*.*" />
			</fileset>
			 <filterchain>
				<replacetokens>
				    <token key="global.version" 	value="${file.version}" />
				    <token key="svn.lastrevision"   	value="${svn.lastrevision}" />
				</replacetokens>
			</filterchain>
		</reflexive>
	
		<!-- apply only if linux is OS -->
		<analyze analyzerPath="/usr/local/bin/joomlaxi/zca" disable="var-ref-notmodified,if-if-else,include-var" >
			<fileset dir="${dir.tmp}">
			    <include name="**/*.php"/>
			</fileset>
		</analyze>
	
	<exec dir="${dir.tmp}" command="find . | xargs -l1 grep -Hi xitodo  | sort > ${dir.report}/xitodo.txt " escape="false" />
	<exec dir="${dir.tmp}" command="find . | xargs -l1 grep -H  JSITE_PATH | sort > ${dir.report}/jsite-path.txt " escape="false" />
	<exec dir="${dir.tmp}" command="find . | xargs -l1 egrep -H '_REQUEST|_POST|_GET|_SESSION|_GLOBAL' | sort  > ${dir.report}/post-get-request.txt " escape="false" />
	<exec dir="${dir.tmp}" command="find  . | xargs -l1 egrep -H 'require_once|include_once| require | include ' | sort  > ${dir.report}/require.txt "  escape="false"  />

	</target>
</project>
